SearchDefinitions:
 moduleName: rainmaker-pgr-V2
 summary: PGR resolver for Rainmaker
 version: 1.0.0
 definitions:
 - name: serviceSearchWithDetails
   query: 
   # select array_to_json(array_agg(row_to_json(serviceRequests))) from (select (select (select (row_to_json(services)) from ( select *, (select (select row_to_json(auditDetails) from (select createdtime, lastmodifiedtime, createdby, lastmodifiedby from eg_pgr_service where svc.serviceRequestId=eg_pgr_service.serviceRequestId) auditDetails) as auditDetails), (select (select (row_to_json(addressDetail)) from (select * from eg_pgr_address where eg_pgr_address.uuid=eg_pgr_service.addressid) addressDetail) as addressDetail) from eg_pgr_service svc where svc.serviceRequestId=eg_pgr_service.serviceRequestId order by createdtime desc) services) as services),(select (select array_to_json(array_agg(row_to_json(actionHistory))) from ( select * from eg_pgr_action where businessKey=eg_pgr_service.serviceRequestId order by "when" desc) actionHistory) as actionHistory) from eg_pgr_service $where order by createdtime desc $pagination) serviceRequests
    baseQuery: |
        SELECT
          coalesce(
            json_agg(
              "root"
              ORDER BY
                "root.pg.createdtime" DESC NULLS FIRST
            ),
            '[]'
          ) AS "root"
        FROM
          (
            SELECT
              row_to_json(
                (
                  SELECT
                    "_14_e"
                  FROM
                    (
                      SELECT
                        "_9_root.or.self"."services" AS "services",
                        "_13_root.ar.root.actionhistory"."actionhistory" AS "actionhistory"
                    ) AS "_14_e"
                )
              ) AS "root",
              "_0_root.base"."createdtime" AS "root.pg.createdtime"
            FROM
              (
                SELECT
                  *
                FROM
                  "public"."eg_pgr_service"
                $where
              ) AS "_0_root.base"
              LEFT OUTER JOIN LATERAL (
                SELECT
                  row_to_json(
                    (
                      SELECT
                        "_8_e"
                      FROM
                        (
                          SELECT
                            "_1_root.or.self.base"."tenantid" AS "tenantid",
                            "_1_root.or.self.base"."servicecode" AS "servicecode",
                            "_1_root.or.self.base"."servicerequestid" AS "servicerequestid",
                            "_1_root.or.self.base"."description" AS "description",
                            "_1_root.or.self.base"."lat" AS "lat",
                            "_1_root.or.self.base"."long" AS "long",
                            "_1_root.or.self.base"."address" AS "address",
                            "_1_root.or.self.base"."addressid" AS "addressid",
                            "_1_root.or.self.base"."email" AS "email",
                            "_1_root.or.self.base"."deviceid" AS "deviceid",
                            "_1_root.or.self.base"."accountid" AS "accountid",
                            "_1_root.or.self.base"."firstname" AS "firstname",
                            "_1_root.or.self.base"."lastname" AS "lastname",
                            "_1_root.or.self.base"."phone" AS "phone",
                            "_1_root.or.self.base"."attributes" AS "attributes",
                            "_1_root.or.self.base"."status" AS "status",
                            "_1_root.or.self.base"."source" AS "source",
                            "_1_root.or.self.base"."expectedtime" AS "expectedtime",
                            "_1_root.or.self.base"."feedback" AS "feedback",
                            "_1_root.or.self.base"."rating" AS "rating",
                            "_1_root.or.self.base"."createdby" AS "createdby",
                            "_1_root.or.self.base"."createdtime" AS "createdtime",
                            "_1_root.or.self.base"."lastmodifiedby" AS "lastmodifiedby",
                            "_1_root.or.self.base"."lastmodifiedtime" AS "lastmodifiedtime",
                            "_1_root.or.self.base"."landmark" AS "landmark",
                            "_1_root.or.self.base"."active" AS "active",
                            "_4_root.or.self.or.self"."auditdetails" AS "auditdetails",
                            "_7_root.or.self.or.eg_pgr_address_id"."addressdetail" AS "addressdetail"
                        ) AS "_8_e"
                    )
                  ) AS "services"
                FROM
                  (
                    SELECT
                      *
                    FROM
                      "public"."eg_pgr_service"
                    WHERE
                      (
                        (("_0_root.base"."tenantid") = ("tenantid"))
                        AND (
                          ("_0_root.base"."servicerequestid") = ("servicerequestid")
                        )
                      )
                  ) AS "_1_root.or.self.base"
                  LEFT OUTER JOIN LATERAL (
                    SELECT
                      row_to_json(
                        (
                          SELECT
                            "_3_e"
                          FROM
                            (
                              SELECT
                                "_2_root.or.self.or.self.base"."createdby" AS "createdby",
                                "_2_root.or.self.or.self.base"."lastmodifiedby" AS "lastmodifiedby",
                                "_2_root.or.self.or.self.base"."createdtime" AS "createdtime",
                                "_2_root.or.self.or.self.base"."lastmodifiedtime" AS "lastmodifiedtime"
                            ) AS "_3_e"
                        )
                      ) AS "auditdetails"
                    FROM
                      (
                        SELECT
                          *
                        FROM
                          "public"."eg_pgr_service"
                        WHERE
                          (
                            (
                              ("_1_root.or.self.base"."tenantid") = ("tenantid")
                            )
                            AND (
                              ("_1_root.or.self.base"."servicerequestid") = ("servicerequestid")
                            )
                          )
                      ) AS "_2_root.or.self.or.self.base"
                  ) AS "_4_root.or.self.or.self" ON ('true')
                  LEFT OUTER JOIN LATERAL (
                    SELECT
                      row_to_json(
                        (
                          SELECT
                            "_6_e"
                          FROM
                            (
                              SELECT
                                "_5_root.or.self.or.eg_pgr_address_id.base"."uuid" AS "uuid",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."housenoandstreetname" AS "housenoandstreetname",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."mohalla" AS "mohalla",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."landmark" AS "landmark",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."latitude" AS "latitude",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."longitude" AS "longitude",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."city" AS "city",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."tenantid" AS "tenantid",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."createdby" AS "createdby",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."createdtime" AS "createdtime",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."lastmodifiedby" AS "lastmodifiedby",
                                "_5_root.or.self.or.eg_pgr_address_id.base"."lastmodifiedtime" AS "lastmodifiedtime"
                            ) AS "_6_e"
                        )
                      ) AS "addressdetail"
                    FROM
                      (
                        SELECT
                          *
                        FROM
                          "public"."eg_pgr_address"
                        WHERE
                          (("_1_root.or.self.base"."addressid") = ("uuid"))
                      ) AS "_5_root.or.self.or.eg_pgr_address_id.base"
                  ) AS "_7_root.or.self.or.eg_pgr_address_id" ON ('true')
              ) AS "_9_root.or.self" ON ('true')
              LEFT OUTER JOIN LATERAL (
                SELECT
                  coalesce(json_agg("actionhistory"), '[]') AS "actionhistory"
                FROM
                  (
                    SELECT
                      row_to_json(
                        (
                          SELECT
                            "_11_e"
                          FROM
                            (
                              SELECT
                                "_10_root.ar.root.actionhistory.base"."uuid" AS "uuid",
                                "_10_root.ar.root.actionhistory.base"."tenantid" AS "tenantid",
                                "_10_root.ar.root.actionhistory.base"."by" AS "by",
                                "_10_root.ar.root.actionhistory.base"."isinternal" AS "isinternal",
                                "_10_root.ar.root.actionhistory.base"."when" AS "when",
                                "_10_root.ar.root.actionhistory.base"."businesskey" AS "businesskey",
                                "_10_root.ar.root.actionhistory.base"."status" AS "status",
                                "_10_root.ar.root.actionhistory.base"."assignee" AS "assignee",
                                "_10_root.ar.root.actionhistory.base"."media" AS "media",
                                "_10_root.ar.root.actionhistory.base"."comments" AS "comments",
                                "_10_root.ar.root.actionhistory.base"."action" AS "action"
                            ) AS "_11_e"
                        )
                      ) AS "actionhistory"
                    FROM
                      (
                        SELECT
                          *
                        FROM
                          "public"."eg_pgr_action"
                        WHERE
                          (
                            (("_0_root.base"."tenantid") = ("tenantid"))
                            AND (
                              ("_0_root.base"."servicerequestid") = ("businesskey")
                            )
                          )
                      ) AS "_10_root.ar.root.actionhistory.base"
                  ) AS "_12_root.ar.root.actionhistory"
              ) AS "_13_root.ar.root.actionhistory" ON ('true')
            ORDER BY
              "root.pg.createdtime" DESC NULLS FIRST
            $pagination
          ) AS "_15_root"
    groupBy:    
    orderBy: 
   searchParams:
    condition: AND
    params:
    - name: tenantid
      isMandatory: true
      jsonPath: $.searchCriteria.tenantId
      operator: LIKE
    - name: servicerequestid
      isMandatory: false
      jsonPath: $.searchCriteria.serviceRequestId
    - name: servicerequestid
      isMandatory: false
      jsonPath: $.searchCriteria.complaintId
      operator: LIKE
    - name: accountid
      isMandatory: false
      jsonPath: $.searchCriteria.accountId
    - name: status
      isMandatory: false
      jsonPath: $.searchCriteria.status
    - name: createdtime
      isMandatory: false
      operator: GE
      jsonPath: $.searchCriteria.startDate
    - name: createdtime
      isMandatory: false
      operator: LE
      jsonPath: $.searchCriteria.endDate
    - name: lastmodifiedtime
      isMandatory: false
      jsonPath: $.searchCriteria.lastUpdatedSince
    - name: serviceCode
      isMandatory: false
      jsonPath: $.searchCriteria.serviceCodes
    - name: phone
      isMandatory: false
      jsonPath: $.searchCriteria.phone
    - name: createdby
      isMandatory: false
      jsonPath: $.searchCriteria.createdBy
    - name: active
      isMandatory: false
      jsonPath: $.searchCriteria.active
    pagination:
      noOfRecords: $.searchCriteria.noOfRecords
      offset: $.searchCriteria.offset

   output:
    jsonFormat: {"ResponseInfo": {}}
    outJsonPath: $.services
    responseInfoPath: $.ResponseInfo

 - name: getServiceRequestsOnAssignedTo
    #select array_to_json(array_agg(row_to_json(servicesRequestIds))) from (select businessKey from eg_pgr_action $where AND eg_pgr_action.when IN (select max("when") from eg_pgr_action where assignee NOTNULL group by businessKey)) servicesRequestIds    baseQuery: | 
   query: 
    baseQuery: | 
          select
              array_to_json(array_agg(row_to_json(servicesRequestIds)))
          from
              (
                  select
                      businessKey
                  from
                      eg_pgr_action $where
                  
                      AND eg_pgr_action.when IN (
                          select
                              max("when")
                          from
                              eg_pgr_action
                          $where
                              and assignee NOTNULL
                          group by
                              businessKey
                      )
              ) servicesRequestIds
    groupBy:    
    orderBy: 
   searchParams:
    condition: AND
    params:
    - name: tenantid
      isMandatory: true
      jsonPath: $.searchCriteria.tenantId
    - name: assignee
      isMandatory: true
      jsonPath: $.searchCriteria.assignedTo

   output:
    jsonFormat: {"ResponseInfo": {}}
    outJsonPath: $.servicesRequestIds
    responseInfoPath: $.ResponseInfo
    
    
 - name: count
   query: 
    baseQuery: select (row_to_json(services)) from ( select count(*) from eg_pgr_service $where) as services
    groupBy:    
    orderBy: 
   searchParams:
    condition: AND
    params:
    - name: tenantid
      isMandatory: true
      jsonPath: $.searchCriteria.tenantId
      operator: LIKE
    - name: servicerequestid
      isMandatory: false
      jsonPath: $.searchCriteria.serviceRequestId
      operator: LIKE
    - name: accountid
      isMandatory: false
      jsonPath: $.searchCriteria.accountId
    - name: status
      isMandatory: false
      jsonPath: $.searchCriteria.status
    - name: createdtime
      isMandatory: false
      operator: GE
      jsonPath: $.searchCriteria.startDate
    - name: createdtime
      isMandatory: false
      operator: LE
      jsonPath: $.searchCriteria.endDate
    - name: lastmodifiedtime
      isMandatory: false
      jsonPath: $.searchCriteria.lastUpdatedSince
    - name: serviceCode
      isMandatory: false
      jsonPath: $.searchCriteria.serviceCodes
    - name: phone
      isMandatory: false
      jsonPath: $.searchCriteria.phone
    - name: active
      isMandatory: false
      jsonPath: $.searchCriteria.active
      
   output:
    jsonFormat: {"ResponseInfo": {}}
    outJsonPath: $.count
    responseInfoPath: $.ResponseInfo
    
 - name: plainSearch
   query: 
    baseQuery: SELECT Array_to_json(Array_agg(Row_to_json(servicerequests))) FROM (SELECT (SELECT (SELECT ( Row_to_json(services) )FROM (SELECT *, (SELECT (SELECT Row_to_json(auditdetails) FROM (SELECT createdtime FROM eg_pgr_service WHERE  svc.servicerequestid = eg_pgr_service.servicerequestid) auditDetails) AS auditDetails), (SELECT (SELECT ( Row_to_json( addressdetail) ) FROM (SELECT * FROM eg_pgr_address WHERE  eg_pgr_address.uuid = eg_pgr_service.addressid) addressDetail) AS addressDetail) FROM eg_pgr_service svc WHERE  svc.servicerequestid = eg_pgr_service.servicerequestid ORDER  BY createdtime DESC) services) AS services), (SELECT (SELECT Array_to_json(Array_agg(Row_to_json(actionhistory))) FROM (SELECT * FROM eg_pgr_action WHERE  businesskey = eg_pgr_service.servicerequestid ORDER  BY "when" DESC) actionHistory) AS actionHistory) FROM eg_pgr_service $where AND servicerequestid in (Select servicerequestid from eg_pgr_service ORDER  BY createdtime ASC $pagination) ORDER  BY createdtime ASC) serviceRequests; 
    groupBy:    
    orderBy: 
   searchParams:
    condition: AND
    params:
    - name: tenantid
      isMandatory: true
      jsonPath: $.searchCriteria.tenantId
      operator: LIKE
    - name: servicerequestid
      isMandatory: false
      jsonPath: $.searchCriteria.serviceRequestId
    - name: servicerequestid
      isMandatory: false
      jsonPath: $.searchCriteria.complaintId
      operator: LIKE
    - name: accountid
      isMandatory: false
      jsonPath: $.searchCriteria.accountId
    - name: status
      isMandatory: false
      jsonPath: $.searchCriteria.status
    - name: createdtime
      isMandatory: false
      operator: GE
      jsonPath: $.searchCriteria.startDate
    - name: createdtime
      isMandatory: false
      operator: LE
      jsonPath: $.searchCriteria.endDate
    - name: lastmodifiedtime
      isMandatory: false
      jsonPath: $.searchCriteria.lastUpdatedSince
    - name: serviceCode
      isMandatory: false
      jsonPath: $.searchCriteria.serviceCodes
    - name: phone
      isMandatory: false
      jsonPath: $.searchCriteria.phone
    - name: createdby
      isMandatory: false
      jsonPath: $.searchCriteria.createdBy
    - name: active
      isMandatory: false
      jsonPath: $.searchCriteria.active
    pagination:
      noOfRecords: $.searchCriteria.noOfRecords
      offset: $.searchCriteria.offset
      
   output:
    jsonFormat: {"ResponseInfo": {}}
    outJsonPath: $.services
    responseInfoPath: $.ResponseInfo
