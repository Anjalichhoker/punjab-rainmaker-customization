---
ReportDefinitions:
- reportName: ReceiptRegisterSW
  decryptionPathId: ReceiptRegisterSW
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-ws
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: pdid
    label: reports.ws.pdid
    type: string
    source: ws
    total: false
  - name: adhocpenalty
    label: reports.ws.adhocpenalty
    type: string
    source: ws
    total: false
  - name: adhocrebate
    label: reports.ws.adhocrebate
    type: string
    source: ws
    total: false
  - name: compositionfee
    label: reports.ws.compositionfee
    type: string
    source: ws
    total: false
  - name: connectionfee
    label: reports.ws.connectionfee
    type: string
    source: ws
    total: false
  - name: roundoff
    label: reports.ws.roundoff
    type: string
    source: ws
    total: true
  - name: formfee
    label: reports.ws.formfee
    type: string
    source: ws
    total: true
  - name: onetimefee
    label: reports.ws.onetimefee
    type: string
    source: ws
    total: true
  - name: othercharge
    label: reports.ws.othercharge
    type: string
    source: ws
    total: true
  - name: roadcuttingcharge
    label: reports.ws.roadcuttingcharge
    type: string
    source: ws
    total: true
  - name: scrutinyfee
    label: reports.ws.scrutinyfee
    type: string
    source: ws
    total: true
  - name: securitycharge
    label: reports.ws.securitycharge
    type: string
    source: ws
    total: true
  - name: taxandcess
    label: reports.ws.interest
    type: string
    source: ws
    total: true
  - name: usercharge
    label: reports.ws.usercharge
    type: string
    source: ws
    total: true
  searchParams:
  query: |
      -- Use CTE to force query plan, compute & use CTE later
      SELECT
                    pd.id as pdid,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_COMPOSITION_FEE' THEN adjustedamount ELSE 0 END) as compositionfee, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_CONNECTION_FEE' THEN adjustedamount ELSE 0 END) as connectionfee, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_FEE_ROUND_OFF' THEN adjustedamount ELSE 0 END) as roundoff, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_FORM_FEE' THEN adjustedamount ELSE 0 END) as formfee, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_ONE_TIME_FEE' THEN adjustedamount ELSE 0 END) as onetimefee,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_OTHER_CHARGE' THEN bad.amount ELSE 0 END) as othercharge,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_OTHER_FEE' THEN adjustedamount ELSE 0 END) as otherfee, 
                    SUM(CASE WHEN taxheadcode LIKE 'SW_ROAD_CUTTING_CHARGE' THEN bad.amount ELSE 0 END) as roadcuttingcharge,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_SCRUTINY_FEE' THEN bad.amount ELSE 0 END)  as scrutinyfee,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_SECURITY_CHARGE' THEN adjustedamount ELSE 0 END) as securitycharge,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_TAX_AND_CESS' THEN adjustedamount ELSE 0 END) as taxandcess,
                    SUM(CASE WHEN taxheadcode LIKE 'SW_USER_CHARGE' THEN adjustedamount ELSE 0 END) as usercharge				 
                  FROM egcl_billaccountdetail as bad
                  INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
                  INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
                  INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
                  WHERE payment.tenantid = 'pb.amritsar' and payment.paymentstatus != 'CANCELLED' and  pd.businessservice like 'SW%'
                  GROUP BY pdid
  orderby: ORDER BY rh.receiptdate DESC
