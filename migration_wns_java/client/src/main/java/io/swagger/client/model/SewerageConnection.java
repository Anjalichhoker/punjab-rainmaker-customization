/*
 * eGov Water and Sewerage(W&S)  System.
 * APIs for W&S module. This provide APIs for create new property, update existing property, search existing property. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@egovernments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AuditDetails;
import io.swagger.client.model.Connection;
import io.swagger.client.model.Document;
import io.swagger.client.model.PlumberInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
/**
 * SewerageConnection
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-01-26T12:10:41.195Z[GMT]")
public class SewerageConnection extends Connection {
  @SerializedName("noOfWaterClosets")
  private BigDecimal noOfWaterClosets = null;

  @SerializedName("proposedWaterClosets")
  private BigDecimal proposedWaterClosets = null;

  @SerializedName("noOfToilets")
  private BigDecimal noOfToilets = null;

  @SerializedName("proposedToilets")
  private BigDecimal proposedToilets = null;

  public SewerageConnection noOfWaterClosets(BigDecimal noOfWaterClosets) {
    this.noOfWaterClosets = noOfWaterClosets;
    return this;
  }

   /**
   * Get noOfWaterClosets
   * @return noOfWaterClosets
  **/
  @Schema(description = "")
  public BigDecimal getNoOfWaterClosets() {
    return noOfWaterClosets;
  }

  public void setNoOfWaterClosets(BigDecimal noOfWaterClosets) {
    this.noOfWaterClosets = noOfWaterClosets;
  }

  public SewerageConnection proposedWaterClosets(BigDecimal proposedWaterClosets) {
    this.proposedWaterClosets = proposedWaterClosets;
    return this;
  }

   /**
   * Get proposedWaterClosets
   * @return proposedWaterClosets
  **/
  @Schema(description = "")
  public BigDecimal getProposedWaterClosets() {
    return proposedWaterClosets;
  }

  public void setProposedWaterClosets(BigDecimal proposedWaterClosets) {
    this.proposedWaterClosets = proposedWaterClosets;
  }

  public SewerageConnection noOfToilets(BigDecimal noOfToilets) {
    this.noOfToilets = noOfToilets;
    return this;
  }

   /**
   * Get noOfToilets
   * @return noOfToilets
  **/
  @Schema(description = "")
  public BigDecimal getNoOfToilets() {
    return noOfToilets;
  }

  public void setNoOfToilets(BigDecimal noOfToilets) {
    this.noOfToilets = noOfToilets;
  }

  public SewerageConnection proposedToilets(BigDecimal proposedToilets) {
    this.proposedToilets = proposedToilets;
    return this;
  }

   /**
   * Get proposedToilets
   * @return proposedToilets
  **/
  @Schema(description = "")
  public BigDecimal getProposedToilets() {
    return proposedToilets;
  }

  public void setProposedToilets(BigDecimal proposedToilets) {
    this.proposedToilets = proposedToilets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SewerageConnection sewerageConnection = (SewerageConnection) o;
    return Objects.equals(this.noOfWaterClosets, sewerageConnection.noOfWaterClosets) &&
        Objects.equals(this.proposedWaterClosets, sewerageConnection.proposedWaterClosets) &&
        Objects.equals(this.noOfToilets, sewerageConnection.noOfToilets) &&
        Objects.equals(this.proposedToilets, sewerageConnection.proposedToilets) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(noOfWaterClosets, proposedWaterClosets, noOfToilets, proposedToilets, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SewerageConnection {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    noOfWaterClosets: ").append(toIndentedString(noOfWaterClosets)).append("\n");
    sb.append("    proposedWaterClosets: ").append(toIndentedString(proposedWaterClosets)).append("\n");
    sb.append("    noOfToilets: ").append(toIndentedString(noOfToilets)).append("\n");
    sb.append("    proposedToilets: ").append(toIndentedString(proposedToilets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
